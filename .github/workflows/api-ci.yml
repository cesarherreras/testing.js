name: API CI
# on: [push]
#Cuando es un monorepo
on:
  push:
    paths:
      - "./api/**"
      - ".github/workflows/api-ci.yml"

defaults:
  run:
    working-directory: ./api

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      #Clona el repositorio en la máquina
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"
          cache-dependency-path: ./api/package-lock.json
      - name: install dependencies
        shell: bash
        #Instala dependencias en un entorno de integración continua ci
        run: npm ci
      - name: run unit test
        shell: bash
        run: npm run test
  e2e-test:
    runs-on: ubuntu-latest
    container:
      image: node:14
    services:
      mongo-e2e:
        image: mongo:4.4
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: test123
        ports:
          - 27017:27017
    steps:
      #Clona el repositorio en la máquina
      - name: Checkout
        uses: actions/checkout@v2
      - name: install dependencies
        shell: bash
        #Instala dependencias en un entorno de integración continua ci
        run: npm ci
      - name: run e2e test
        shell: bash
        run: npm run test:e2e
        env:
          MONGO_DB_NAME: demo
          MONGO_URL: mongodb://test:test123@mongo-e2e:27017?retryWrites=true&writeConcern=majority

  linter:
    runs-on: ubuntu-latest
    steps:
      #Clona el repositorio en la máquina
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"
          cache-dependency-path: ./api/package-lock.json
      - name: install dependencies
        shell: bash
        #Instala dependencias en un entorno de integración continua ci
        run: npm ci
      - name: run linter
        shell: bash
        run: npm run lint
